//@version=4
strategy("LONG POSITION", overlay=true, pyramiding=10, default_qty_type=strategy.percent_of_equity,
  default_qty_value=10)



fromMonth = input(defval = 4,    title = "From Month",      type = input.integer, minval = 1, maxval = 12)
fromDay   = input(defval = 24,    title = "From Day",        type = input.integer, minval = 1, maxval = 31)
fromYear  = input(defval = 2010, title = "From Year",       type = input.integer, minval = 1970)
thruMonth = input(defval = 4,    title = "Thru Month",      type = input.integer, minval = 1, maxval = 12)
thruDay   = input(defval = 1,    title = "Thru Day",        type = input.integer, minval = 1, maxval = 31)
thruYear  = input(defval = 2021, title = "Thru Year",       type = input.integer, minval = 1970)

showDate  = input(defval = true, title = "Show Date Range", type = input.bool)

// === FUNCTION EXAMPLE ===
start     = timestamp(fromYear, fromMonth, fromDay, 00, 00)        // backtest start window
finish    = timestamp(thruYear, thruMonth, thruDay, 23, 59)        // backtest finish window
window()  => time >= start and time <= finish ? true : false

////////////////////////////////////////////Bollinger-Band///////////////////////////////////////////

length = input(20, minval=1)
src = input(close, title="Source")
mult = input(2.0, minval=0.001, maxval=50)
basis = sma(src, length)
dev = mult * stdev(src, length)
upper = basis + dev
lower = basis - dev
source1=close
plot(basis, title='Boll_Mid' , color=color.blue)
p1 = plot(upper,title='Boll_UP', color=color.green)
p2 = plot(lower,title='Boll_LOW', color=color.red)
fill(p1, p2)

///////////////////////////////////////////////RSI//////////////////////////////////////////////////////
len = input(14, minval=1, title="Length")
src1 = input(close, "Source", type = input.source)
up = rma(max(change(src1), 0), len)
down = rma(-min(change(src), 0), len)
rsi = down == 0 ? 100 : up == 0 ? 0 : 100 - (100 / (1 + up / down))

/////////////////////////////////////////////EMA-55/////////////////////////////////////////////////////

emalen = input(55, minval=1, title="Length")
emasrc = input(close, title="Source")
offset = input(title="Offset", type=input.integer, defval=0, minval=-500, maxval=500)
EMA = ema(emasrc, emalen)
plot(EMA, title="EMA", color=color.yellow, offset=offset)

////////////////////////////////////////////Enter Trade/////////////////////////////////////////////////
long  = crossover(EMA,basis)
short = crossunder(EMA,basis)
barslong = barssince(long)
// barsshort = barssince(short)
exit  = cross(EMA,close)

////////////////////////////////////////////Initial Amount/////////////////////////////////////////////////////////

trade_open_qty  = input(100000, 'Initial Trade Amount', minval=0)

////////////////////////////////////////////Averaging////////////////////////////////////////////////////
target_perc = input(-1,type=input.float, title='Target Loss to Average Down (%)', maxval=0)/100
pnl = (close - strategy.position_avg_price) / strategy.position_avg_price
target_qty  = input(100,type=input.float, title='% Of Current Holdings to Buy', minval=0)/100

////////////////////////////////////////////Enter Short///////////////////////////////////////////////////
if (strategy.opentrades == 0)
    strategy.entry("long",strategy.long,when=barslong and window() and rsi<30,qty=trade_open_qty,comment="first trade")
if (pnl  <= target_perc and strategy.opentrades != 0)
    qty = floor(strategy.initial_capital * target_qty)
    strategy.entry("long", strategy.long, qty=qty,comment="avg trade")
strategy.close("long", when=exit)
///////////////////////////////////////SToploss-long//////////////////////////////////////// 
stoploss_perc = input(-1,type=input.float, title='Target StopLoss(%)', maxval=0)/100
stoploss_price = (close - strategy.position_avg_price) / strategy.position_avg_price
if (stoploss_perc >= stoploss_price)
    strategy.close("long",comment="stoploss triggered")
take_profit = input(0.2,type=input.float, title='Target Profit(%)', maxval=100)/100
trail_profit = input(0.2,type=input.float, title='Trail SL (%)', maxval=100)/100
tp_price = (close - strategy.position_avg_price) / strategy.position_avg_price
if (take_profit<=tp_price)
    strategy.close("long",comment="Take profit target Closed")
    x=tp_price-trail_profit
    if (x<trail_profit)
        strategy.close("long",comment="Trail Closed")
